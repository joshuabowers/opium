{"name":"Opium","tagline":"An Object Parse.com Mapping technology for defining models.","body":"# Opium\r\n\r\nProvides an intuitive, Mongoid-inspired mapping layer between your application's object space and Parse.\r\n\r\n[![Build Status](https://travis-ci.org/joshuabowers/opium.svg?branch=master)](https://travis-ci.org/joshuabowers/opium)\r\n[![Coverage Status](https://img.shields.io/coveralls/joshuabowers/opium.svg)](https://coveralls.io/r/joshuabowers/opium)\r\n[![Code Climate](https://codeclimate.com/github/joshuabowers/opium/badges/gpa.svg)](https://codeclimate.com/github/joshuabowers/opium)\r\n\r\n## Installation\r\n\r\nAdd this line to your application's Gemfile:\r\n\r\n    gem 'opium'\r\n\r\nAnd then execute:\r\n\r\n    $ bundle\r\n\r\nOr install it yourself as:\r\n\r\n    $ gem install opium\r\n\r\n## Usage\r\n\r\n### Within Rails\r\n\r\nOpium will automatically establish itself as the default ORM for Rails.\r\n\r\n#### ORM Configuration\r\n\r\nCreate a config file to communicate with your Parse database by running the config generator:\r\n\r\n```bash\r\n$ rails g opium:config\r\n```\r\n\r\nSee the generated file at `config/opium.yml` for more details\r\n\r\n#### Model Generator\r\n\r\nA generator exists for creating new models; this should be invoked whenever `rails g model` gets invoked.\r\n\r\n```bash\r\n$ rails g model game title:string price:float\r\n```\r\n\r\n### Specifying a model\r\n\r\nModels are defined by mixing in `Opium::Model` into a new class. Class names should match the names of the\r\nclasses defined within Parse. You can define fields on your model which mirror the columns within a Parse\r\nclass.\r\n\r\n```ruby\r\nclass Game\r\n  include Opium::Model\r\n  \r\n  field :title, type: String\r\n  field :price, type: Float\r\nend\r\n```\r\n\r\nAll models automatically come with three fields: *:id*, *:created_at*, and *:updated_at*. Field names are\r\nconverted from a native ruby snake_case naming convention to a Parse lowerCamel convention.\r\n\r\n## Contributing\r\n\r\n1. Fork it ( https://github.com/[my-github-username]/opium/fork )\r\n2. Create your feature branch (`git checkout -b my-new-feature`)\r\n3. Commit your changes (`git commit -am 'Add some feature'`)\r\n4. Push to the branch (`git push origin my-new-feature`)\r\n5. Create a new Pull Request\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}